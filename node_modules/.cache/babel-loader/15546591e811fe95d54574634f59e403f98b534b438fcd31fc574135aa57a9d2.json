{"ast":null,"code":"var _jsxFileName = \"/home/patricio/Escritorio/imt/numen2023/src/componentes/Pregunta.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pregunta = () => {\n  _s();\n  // useState -> se declara el estado\n  // devuelve un array con el estado y una funcion para cambiarlo\n  // el estado esta protegido, privado y encapsulado\n  // si se declara con let puedo cambiar directamente titulo\n  const [titulo, setTitulo] = useState('titulo del estado que se encuentra seteado en su declaración');\n  // titulo = \"Pindonga\";\n  // setTitulo('titulo del estado que se encuentra seteado');\n\n  const [planeta, setPlaneta] = useState('');\n\n  // const [planetaOrden, setPlanetaOrden] = useState('-1');\n\n  // const mostrarPlanetaOrden = (planetaOrden) => {\n  //     switch (planetaOrden) {\n  //         case 0:\n  //             setPlanetaOrden(`Orden del planeta: ${planetaOrden} - El Sol`);\n  //             return setPlanetaOrden(planetaOrden + 1);\n  //         case 1:\n  //             setPlanetaOrden(`Orden del planeta: ${planetaOrden} - Mercurio`);\n  //             return setPlanetaOrden(planetaOrden + 1);\n  //         default:\n  //             return `Orden del planeta: ${planetaOrden}`;\n  //     }\n  // }\n\n  const [que, setQue] = useState(\"\");\n  // setQue(\"que es el estado?\");\n  const [como, setComo] = useState(\"\");\n  const queEstado = () => setQue(\"que es el estado?\");\n  const comoEstado = () => {\n    setComo(\"como es el estado?\");\n  };\n  const [maneja, setManeja] = useState(\"\");\n  const verFuncionManejadora = () => {\n    setManeja(\"Llamado a una funcion manejadora\");\n  };\n  const ocultarFuncionManejadora = () => {\n    setManeja(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Bienvenidos al Contador!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Declaro un useState, entre par\\xE9ntesis declaro el valor inicial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Declaro el estado y su funcion para modificarla. La variable no se puede modificar directamente, por eso el estado es inmutable, solo se modifica por medio de una funcion.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\xBFQue devuelve la funcion useState?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\xBFPor qu\\xE9 debo declarar un arreglo?. Cuando declaro el hook useState devuleve el estado El contenido de este estado es el argumento que se declara al inicial el hook y lo guardo en la variable que declar\\xE9. Lo segundo que devuelve este hook es una funci\\xF3n que permitir\\xE1 el cambio del contenido de la variable.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"const \", \"[variable, funcionModificadorVariable]=useState('Valor inicial');\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Para llamar a la variable se usa el m\\xE9todo tradicional de las llaves \", '{ }', \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"muestro el titulo: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Se setea fuera del return: setTitulo\", '(\"titulo del estado que se encuentra seteado\");']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      children: titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Para cambiar el estado se hace por medio de un evento, en este caso un boton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTitulo(\"modifique el estado con un click en el botón\"),\n      children: \"Cambiar el estado!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\xBFCuales es el primer planeta desde el sol en nuestro sistema solar?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPlaneta(\"Mercurio es el planeta más cercano al sistema solar!\"),\n      children: \"Ver respuesta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), planeta, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: queEstado,\n      children: \"\\xBFQu\\xE9 es el estado (state) en React? ... Cliquear para ver la respuesta!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: que\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"En el boton anterior \", '<button onClick={() => setTitulo(\"modifique el estado con un click en el botón\")}>Cambiar el estado!</button>', \" lo que pasa es que la funcion flecha al poner \", '()=>', \" la orden no se ejecuta automaticamente, porque \", '()', \" es un evento que se encarga de manejar el estado esta funcion arrow se llama handlers o manejadores \", '(de eventos)', \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Espera que se presione el bot\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: comoEstado,\n      children: \"\\xBFC\\xF3mo es el estado (state) en React? ... Cliquear para ver la respuesta!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: como\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Llamo a una funcion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"En este caso en vez de una funcion inline en buttom ahora la llamo como si se tratase de una funcion aparte. \", '<button onClick={funcionManejadora}>Cambiar el estado!</button>']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verFuncionManejadora,\n        children: \"Ver funcion manejadora o handler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: ocultarFuncionManejadora,\n        children: \"Ocultar la respuesta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"blue\"\n        },\n        children: maneja\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this)\n  // 1:24\n  ;\n};\n_s(Pregunta, \"vAO2khk3lglH/RqG8GJ6UYQ5EkQ=\");\n_c = Pregunta;\nexport default Contador;\nvar _c;\n$RefreshReg$(_c, \"Pregunta\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Pregunta","_s","titulo","setTitulo","planeta","setPlaneta","que","setQue","como","setComo","queEstado","comoEstado","maneja","setManeja","verFuncionManejadora","ocultarFuncionManejadora","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","_c","Contador","$RefreshReg$"],"sources":["/home/patricio/Escritorio/imt/numen2023/src/componentes/Pregunta.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Pregunta = () => {\n    // useState -> se declara el estado\n    // devuelve un array con el estado y una funcion para cambiarlo\n    // el estado esta protegido, privado y encapsulado\n    // si se declara con let puedo cambiar directamente titulo\n    const [titulo, setTitulo] = useState('titulo del estado que se encuentra seteado en su declaración');\n    // titulo = \"Pindonga\";\n    // setTitulo('titulo del estado que se encuentra seteado');\n\n     const [planeta, setPlaneta] = useState('');\n\n    // const [planetaOrden, setPlanetaOrden] = useState('-1');\n\n    // const mostrarPlanetaOrden = (planetaOrden) => {\n    //     switch (planetaOrden) {\n    //         case 0:\n    //             setPlanetaOrden(`Orden del planeta: ${planetaOrden} - El Sol`);\n    //             return setPlanetaOrden(planetaOrden + 1);\n    //         case 1:\n    //             setPlanetaOrden(`Orden del planeta: ${planetaOrden} - Mercurio`);\n    //             return setPlanetaOrden(planetaOrden + 1);\n    //         default:\n    //             return `Orden del planeta: ${planetaOrden}`;\n    //     }\n    // }\n\n    const [que, setQue] = useState(\"\");\n    // setQue(\"que es el estado?\");\n    const [como, setComo] = useState(\"\");\n\n    const queEstado = () => setQue(\"que es el estado?\");\n\n    const comoEstado = () => {\n        setComo(\"como es el estado?\");\n    }\n\n    const [maneja, setManeja] = useState(\"\");\n\n    const verFuncionManejadora = () => {\n        setManeja(\"Llamado a una funcion manejadora\");\n    }\n\n    const ocultarFuncionManejadora = () => {\n        setManeja(\"\");\n    }\n    return (\n        <div>\n            <h3>Bienvenidos al Contador!</h3>\n            \n            <p>Declaro un useState, entre paréntesis declaro el valor inicial</p>\n            <p>Declaro el estado y su funcion para modificarla. La variable no se puede modificar directamente,\n                por eso el estado es inmutable, solo se modifica por medio de una funcion.\n            </p>\n            <h4>¿Que devuelve la funcion useState?</h4>\n            <p>\n                ¿Por qué debo declarar un arreglo?. Cuando declaro el hook useState devuleve el estado  \n                El contenido de este estado es el argumento que se declara al inicial el hook y lo guardo\n                en la variable que declaré. Lo segundo que devuelve este hook es una función que permitirá\n                el cambio del contenido de la variable.\n            </p>\n            <p>const {\"[variable, funcionModificadorVariable]=useState('Valor inicial');\"}</p>\n            <p>Para llamar a la variable se usa el método tradicional de las llaves {'{ }'} </p>\n            <p>muestro el titulo: </p>\n            <p>Se setea fuera del return: setTitulo{'(\"titulo del estado que se encuentra seteado\");'}</p>\n            <span style={{color: \"red\"}}>{titulo}</span>\n            <p>Para cambiar el estado se hace por medio de un evento, en este caso un boton</p>\n            <button onClick={() => setTitulo(\"modifique el estado con un click en el botón\")}>Cambiar el estado!</button>\n            <h2>¿Cuales es el primer planeta desde el sol en nuestro sistema solar?</h2>\n            <button onClick={() => setPlaneta(\"Mercurio es el planeta más cercano al sistema solar!\")}>Ver respuesta</button>\n            {planeta}\n            {/* <h2>Closure que muestra a los planetas gigantes, rocosos y enanos en orden cada vez que presiono el boton</h2>\n            <button onClick={()=>{mostrarPlanetaOrden(planetaOrden)}}>Mostrar planeta</button>\n            <h6>{mostrarPlanetaOrden}</h6> */}\n            <br />\n            {/* se llama a la funcion sin () caso contrario hace una recursividad y todo se cuelga */}\n            <button onClick={queEstado}>¿Qué es el estado (state) en React? ... Cliquear para ver la respuesta!</button>\n            <section>{que}</section>\n            <p>En el boton anterior {'<button onClick={() => setTitulo(\"modifique el estado con un click en el botón\")}>Cambiar el estado!</button>'} lo que\n                pasa es que la funcion flecha al poner {'()=>'} la orden no se ejecuta automaticamente, porque {'()'} es un evento\n                que se encarga de manejar el estado esta funcion arrow se llama handlers o manejadores {'(de eventos)'}.</p>\n            <p>Espera que se presione el botón</p>\n            <br />\n            <button onClick={comoEstado}>¿Cómo es el estado (state) en React? ... Cliquear para ver la respuesta!</button>\n            <section>{como}</section>\n            <section>\n                <h4>Llamo a una funcion</h4>\n                <p>En este caso en vez de una funcion inline en buttom ahora la llamo como \n                    si se tratase de una funcion aparte. {'<button onClick={funcionManejadora}>Cambiar el estado!</button>'}\n                </p>\n                <button onClick={verFuncionManejadora}>Ver funcion manejadora o handler</button>\n                <button onClick={ocultarFuncionManejadora}>Ocultar la respuesta</button>\n                <span style={{color: \"blue\"}}>{maneja}</span>\n            </section>\n            \n        </div>\n        // 1:24\n    );\n}\n\nexport default Contador;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}